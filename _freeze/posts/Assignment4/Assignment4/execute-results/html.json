{
  "hash": "895f55541603ba2692f1dfef709c09d2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Subreddit Wars\"\nsubtitle: \"Marks and Channels\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n    html-math-method: katex\n    code-copy: true\n---\n\n\nIn this assignment, I explore how different ways of visualizing data can impact how we understand it. Using the **Reddit Hyperlink Network dataset** from my previous assignment, I create a series of visualizations to show visualization principles, including **expressiveness, effectiveness, discriminability, separability, and popout**.  \n\nThe goal is to show how good design choices make data clearer and easier to interpret, while bad choices can make it confusing or misleading. So, when comparing well designed and poorly designed versions of the same data, I learn what works and what doesn’t in data visualization.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n\nfile_path <- \"C:/Github repos/soc-redditHyperlinks-title.tsv\"\n\nreddit_data <- read_tsv(file_path, comment = \"#\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 571927 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (4): SOURCE_SUBREDDIT, TARGET_SUBREDDIT, POST_ID, PROPERTIES\ndbl  (1): LINK_SENTIMENT\ndttm (1): TIMESTAMP\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(reddit_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  SOURCE_SUBREDDIT  TARGET_SUBREDDIT POST_ID TIMESTAMP           LINK_SENTIMENT\n  <chr>             <chr>            <chr>   <dttm>                       <dbl>\n1 rddtgaming        rddtrust         1u4pzzs 2013-12-31 16:39:18              1\n2 xboxone           battlefield_4    1u4tmfs 2013-12-31 17:59:11              1\n3 ps4               battlefield_4    1u4tmos 2013-12-31 17:59:40              1\n4 fitnesscirclejerk leangains        1u50xfs 2013-12-31 19:01:56              1\n5 fitnesscirclejerk lifeprotips      1u51nps 2013-12-31 21:02:28              1\n6 cancer            fuckcancer       1u5216s 2013-12-31 18:59:26              1\n# ℹ 1 more variable: PROPERTIES <chr>\n```\n\n\n:::\n:::\n\n\n# Expressiveness and Effectiveness\n## Figure 1:\nI’m making a heatmap to show how subreddits are connected because it helps us easily see their relationships and spot patterns using colors and organization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'ggplot2' was built under R version 4.4.2\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\n# Select top 20 most frequent subreddit interactions\nheatmap_data <- reddit_data %>%\n  count(SOURCE_SUBREDDIT, TARGET_SUBREDDIT, name = \"weight\") %>%\n  top_n(10, wt = weight)\n\n# heatmap\nggplot(heatmap_data, aes(x = SOURCE_SUBREDDIT, y = TARGET_SUBREDDIT, fill = weight)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkred\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Top 10 Subreddit Interactions\", \n       x = \"Source Subreddit\", \n       y = \"Target Subreddit\", \n       fill = \"Link Count\")\n```\n\n::: {.cell-output-display}\n![](Assignment4_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Assignment4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}