[
  {
    "objectID": "posts/Hockey_Challenge/Hockey_Challenge.html",
    "href": "posts/Hockey_Challenge/Hockey_Challenge.html",
    "title": "Hockey Ballot Blender",
    "section": "",
    "text": "Interoperability is the ability of different systems, datasets, or tools to work together seamlessly, whether that means sharing, merging, or analyzing data across different formats or structures.\nWhen we tried to merge everyone’s award ballots into one dataset, it quickly became clear how important interoperability is. Everyone had different file types, different column names, and different structures. Without a shared format or standard, combining our work became way harder and took way longer than it should have. Interoperability is basically about making systems and datasets able to talk to each other smoothly. If we had agreed on consistent variable names and formats from the start, the merge would’ve been way easier—and the focus could’ve stayed on the actual analysis, not cleaning up the mess. Definitely a lesson learned for future collab-heavy projects.\nIn this assignment, I will merge the datasets, then I will be calculating points from the ballots. Since the awards use a ranked voting system simulating the real NHL voting process, each ballot assigns weighted points—like 10 for 1st place, 7 for 2nd, and so on. To get a final ranking, we’ll add up the points across everyone’s submissions.\nThe player (or nominee) with the highest total number of points across all ballots is the winner. In other words, the one with most consistently high-ranked pick across everyone’s votes takes the award (?).\nCode\nclair &lt;- read_csv(\"Clair_ballots.csv\")\njohn &lt;- read_csv(\"John_ballots.csv\")\nmarwa &lt;- read_csv(\"Marwa_ballots.csv\")\n\npriya &lt;- read_excel(\"Priya_ballots.xlsx\")\nhenry &lt;- read_excel(\"Henry_ballots.xlsx\")\nian &lt;- read_excel(\"Ian_ballots.xlsx\")\nbetsy &lt;- read_excel(\"Betsy_ballots.xlsx\")\nbarrie &lt;- read_excel(\"Barrie_ballots.xlsx\")\njustice &lt;- read_excel(\"Justice_ballots.xlsx\")\n\nsharon &lt;- readRDS(\"sharon_ballot.rds\")"
  },
  {
    "objectID": "posts/Hockey_Challenge/Hockey_Challenge.html#loop-through-all-data-frames-and-print-the-column-names-to-spot-inconsistencies",
    "href": "posts/Hockey_Challenge/Hockey_Challenge.html#loop-through-all-data-frames-and-print-the-column-names-to-spot-inconsistencies",
    "title": "Hockey Ballot Blender",
    "section": "Loop through all data frames and print the column names to spot inconsistencies",
    "text": "Loop through all data frames and print the column names to spot inconsistencies\n\n\nCode\nballots &lt;- list(\n  clair = clair,\n  john = john,\n  marwa = marwa,\n  priya = priya,\n  henry = henry,\n  ian = ian,\n  betsy = betsy,\n  barrie = barrie,\n  justice = justice,\n  sharon = sharon\n)\n\nlapply(ballots, names)\n\n\n$clair\n[1] \"Voter\"  \"Rank\"   \"Award\"  \"Player\"\n\n$john\n[1] \"Voter\"  \"Award\"  \"Rank\"   \"Player\"\n\n$marwa\n[1] \"Voter\"  \"Rank\"   \"Award\"  \"Player\"\n\n$priya\n[1] \"Voter\"                        \"Rank\"                        \n[3] \"Vezina Trophy\"                \"Hart Memorial Trophy\"        \n[5] \"James Norris Memorial Trophy\" \"Calder Memorial Trophy\"      \n[7] \"Frank J. Selke Trophy\"        \"Lady Byng Memorial Trophy\"   \n\n$henry\n[1] \"Voter\"  \"Award\"  \"Rank\"   \"Player\"\n\n$ian\n[1] \"Voter\"  \"Trophy\" \"Rank\"   \"Player\"\n\n$betsy\n[1] \"Voter\"  \"Award\"  \"Rank\"   \"Player\"\n\n$barrie\n[1] \"Voter\"  \"Award\"  \"Player\" \"Rank\"  \n\n$justice\n[1] \"Voter\"  \"Award\"  \"Player\" \"Rank\"  \n\n$sharon\n[1] \"Player\" \"Rank\"   \"Voter\"  \"Award\""
  },
  {
    "objectID": "posts/Hockey_Challenge/Hockey_Challenge.html#clean-all-the-tidylong-ones-fix-priyas-wide-format-and-merge",
    "href": "posts/Hockey_Challenge/Hockey_Challenge.html#clean-all-the-tidylong-ones-fix-priyas-wide-format-and-merge",
    "title": "Hockey Ballot Blender",
    "section": "Clean all the tidy/long ones, fix Priya’s wide format, and merge!",
    "text": "Clean all the tidy/long ones, fix Priya’s wide format, and merge!\n\n\nCode\nclean_tidy_ballot &lt;- function(df) {\n  df %&gt;%\n    janitor::clean_names() %&gt;%\n    dplyr::rename_with(~ gsub(\"trophy\", \"award\", ., ignore.case = TRUE)) %&gt;%\n    dplyr::rename(\n      voter = voter,\n      award = award,\n      rank = rank,\n      player = player\n    ) %&gt;%\n    dplyr::select(voter, award, rank, player)\n}\n\nclean_wide_ballot &lt;- function(df) {\n  df %&gt;%\n    janitor::clean_names() %&gt;%\n    tidyr::pivot_longer(\n      cols = -c(voter, rank),\n      names_to = \"award\",\n      values_to = \"player\"\n    ) %&gt;%\n    dplyr::mutate(rank = as.numeric(rank)) %&gt;%\n    dplyr::select(voter, award, rank, player)\n}\n\ntidy_names &lt;- c(\"clair\", \"john\", \"marwa\", \"henry\", \"ian\", \"betsy\", \"barrie\", \"justice\", \"sharon\")\ntidy_cleaned &lt;- lapply(tidy_names, function(name) clean_tidy_ballot(ballots[[name]]))\npriya_cleaned &lt;- clean_wide_ballot(ballots$priya)\nall_ballots &lt;- dplyr::bind_rows(tidy_cleaned, priya_cleaned)\n\n#checking for inconsistencies\n\nunique(all_ballots$award)\n\n\n [1] \"Vezina Trophy\"                \"Hart Memorial Trophy\"        \n [3] \"Frank J. Selke Trophy\"        \"James Norris Memorial Trophy\"\n [5] \"Calder Memorial Trophy\"       \"Lady Byng Memorial Trophy\"   \n [7] \"Calder Memorial\"              \"Hart Memorial\"               \n [9] \"James Norris Memorial\"        \"Vezina\"                      \n[11] \"Frank Selke Memorial\"         \"Lady Byng Memorial\"          \n[13] \"vezina_trophy\"                \"hart_memorial_trophy\"        \n[15] \"james_norris_memorial_trophy\" \"calder_memorial_trophy\"      \n[17] \"frank_j_selke_trophy\"         \"lady_byng_memorial_trophy\"   \n\n\nCode\nstandardize_award &lt;- function(award) {\n  award &lt;- tolower(award)\n  award &lt;- gsub(\"_\", \" \", award)\n  award &lt;- trimws(award)\n\n  case_when(\n    str_detect(award, \"hart\") ~ \"Hart Memorial Trophy\",\n    str_detect(award, \"vezina\") ~ \"Vezina Trophy\",\n    str_detect(award, \"norris\") ~ \"James Norris Memorial Trophy\",\n    str_detect(award, \"calder\") ~ \"Calder Memorial Trophy\",\n    str_detect(award, \"selke\") ~ \"Frank J. Selke Trophy\",\n    str_detect(award, \"lady byng\") ~ \"Lady Byng Memorial Trophy\",\n    TRUE ~ str_to_title(award)\n  )\n}\n\nall_ballots &lt;- all_ballots %&gt;%\n  mutate(award = standardize_award(award))\n\nunique(all_ballots$award)\n\n\n[1] \"Vezina Trophy\"                \"Hart Memorial Trophy\"        \n[3] \"Frank J. Selke Trophy\"        \"James Norris Memorial Trophy\"\n[5] \"Calder Memorial Trophy\"       \"Lady Byng Memorial Trophy\""
  },
  {
    "objectID": "posts/Hockey_Challenge/Hockey_Challenge.html#define-the-scoring-system",
    "href": "posts/Hockey_Challenge/Hockey_Challenge.html#define-the-scoring-system",
    "title": "Hockey Ballot Blender",
    "section": "Define the scoring system",
    "text": "Define the scoring system\n\n\nCode\npoint_values &lt;- c(`1` = 10, `2` = 7, `3` = 5, `4` = 3, `5` = 1)"
  },
  {
    "objectID": "posts/Hockey_Challenge/Hockey_Challenge.html#adding-a-column-based-on-rank",
    "href": "posts/Hockey_Challenge/Hockey_Challenge.html#adding-a-column-based-on-rank",
    "title": "Hockey Ballot Blender",
    "section": "Adding a column based on rank",
    "text": "Adding a column based on rank\n\n\nCode\nall_ballots &lt;- all_ballots %&gt;%\n  mutate(points = point_values[as.character(rank)])"
  },
  {
    "objectID": "posts/Hockey_Challenge/Hockey_Challenge.html#calculate-total-points-for-player-each-award",
    "href": "posts/Hockey_Challenge/Hockey_Challenge.html#calculate-total-points-for-player-each-award",
    "title": "Hockey Ballot Blender",
    "section": "Calculate total points for player each award",
    "text": "Calculate total points for player each award\n\n\nCode\nfinal_scores &lt;- all_ballots %&gt;%\n  group_by(award, player) %&gt;%\n  summarise(\n    total_points = sum(points, na.rm = TRUE),\n    n_votes = n()\n  ) %&gt;%\n  arrange(award, desc(total_points)) %&gt;%\n  ungroup()\nprint(final_scores)\n\n\n# A tibble: 216 × 4\n   award                  player           total_points n_votes\n   &lt;chr&gt;                  &lt;chr&gt;                   &lt;dbl&gt;   &lt;int&gt;\n 1 Calder Memorial Trophy Kirill Marchenko           45       5\n 2 Calder Memorial Trophy Wyatt Johnston             40       6\n 3 Calder Memorial Trophy Marco Rossi                17       5\n 4 Calder Memorial Trophy Dylan Holloway             16       3\n 5 Calder Memorial Trophy Bobby Brink                10       1\n 6 Calder Memorial Trophy Jake Sanders               10       1\n 7 Calder Memorial Trophy Kirill Machenko            10       1\n 8 Calder Memorial Trophy Kirill Marchenko           10       1\n 9 Calder Memorial Trophy Nathan Clurman             10       1\n10 Calder Memorial Trophy Marco Rossi                 7       1\n# ℹ 206 more rows"
  },
  {
    "objectID": "posts/Hockey_Challenge/Hockey_Challenge.html#top-3-for-each-award",
    "href": "posts/Hockey_Challenge/Hockey_Challenge.html#top-3-for-each-award",
    "title": "Hockey Ballot Blender",
    "section": "Top 3 for each award",
    "text": "Top 3 for each award\n\n\nCode\nlibrary(dplyr)\n\ntop3 &lt;- final_scores %&gt;%\n  group_by(award) %&gt;%\n  slice_max(total_points, n = 3) %&gt;%\n  arrange(award, desc(total_points))\n\nprint(top3)\n\n\n# A tibble: 27 × 4\n# Groups:   award [6]\n   award                        player           total_points n_votes\n   &lt;chr&gt;                        &lt;chr&gt;                   &lt;dbl&gt;   &lt;int&gt;\n 1 Calder Memorial Trophy       Kirill Marchenko           45       5\n 2 Calder Memorial Trophy       Wyatt Johnston             40       6\n 3 Calder Memorial Trophy       Marco Rossi                17       5\n 4 Frank J. Selke Trophy        Brandon Tanev              20       2\n 5 Frank J. Selke Trophy        Jackson Blake              17       2\n 6 Frank J. Selke Trophy        Nathan MacKinnon           15       2\n 7 Hart Memorial Trophy         Leon Draisaitl             35       6\n 8 Hart Memorial Trophy         Nathan MacKinnon           22       3\n 9 Hart Memorial Trophy         Nikita Kucherov            20       3\n10 James Norris Memorial Trophy Ian Cole                   18       3\n# ℹ 17 more rows"
  },
  {
    "objectID": "posts/Hockey_Challenge/Hockey_Challenge.html#each-player-gets-an-official-rank-based-on-their-total-points-1st-place-top-scorer.",
    "href": "posts/Hockey_Challenge/Hockey_Challenge.html#each-player-gets-an-official-rank-based-on-their-total-points-1st-place-top-scorer.",
    "title": "Hockey Ballot Blender",
    "section": "Each player gets an official rank based on their total points (1st place = top scorer).",
    "text": "Each player gets an official rank based on their total points (1st place = top scorer).\n\n\nCode\nfinal_ranks &lt;- final_scores %&gt;%\n  group_by(award) %&gt;%\n  arrange(desc(total_points)) %&gt;%\n  mutate(final_rank = row_number()) %&gt;%\n  select(award, player, final_rank)"
  },
  {
    "objectID": "posts/Hockey_Challenge/Hockey_Challenge.html#joining-final-rank-to-individual-ballots",
    "href": "posts/Hockey_Challenge/Hockey_Challenge.html#joining-final-rank-to-individual-ballots",
    "title": "Hockey Ballot Blender",
    "section": "Joining final rank to individual ballots",
    "text": "Joining final rank to individual ballots\n\n\nCode\nballots_with_ranks &lt;- all_ballots %&gt;%\n  left_join(final_ranks, by = c(\"award\", \"player\"))"
  },
  {
    "objectID": "posts/Hockey_Challenge/Hockey_Challenge.html#calculating-distance-from-final-rank",
    "href": "posts/Hockey_Challenge/Hockey_Challenge.html#calculating-distance-from-final-rank",
    "title": "Hockey Ballot Blender",
    "section": "Calculating distance from final rank",
    "text": "Calculating distance from final rank\nA good metric could be the sum of absolute differences between a voter’s rank and the final rank.\n\n\nCode\nvoter_agreement &lt;- ballots_with_ranks %&gt;%\n  mutate(rank_diff = abs(rank - final_rank)) %&gt;%\n  group_by(voter) %&gt;%\n  summarise(total_difference = sum(rank_diff, na.rm = TRUE)) %&gt;%\n  arrange(total_difference)"
  },
  {
    "objectID": "posts/Assignment4/Assignment4.html",
    "href": "posts/Assignment4/Assignment4.html",
    "title": "Subreddit Wars",
    "section": "",
    "text": "In this assignment, I explore how different ways of visualizing data can impact how we understand it. Using the Reddit Hyperlink Network dataset from my previous assignment, I create a series of visualizations to show visualization principles, including expressiveness, effectiveness, discriminability, separability, and popout.\nThe goal is to show how good design choices make data clearer and easier to interpret, while bad choices can make it confusing or misleading. So, when comparing well designed and poorly designed versions of the same data, I learn what works and what doesn’t in data visualization.\nCode\nlibrary(readr)\n\nfile_path &lt;- \"C:/Github repos/soc-redditHyperlinks-title.tsv\"\n\nreddit_data &lt;- read_tsv(file_path)"
  },
  {
    "objectID": "posts/Assignment4/Assignment4.html#figure-1",
    "href": "posts/Assignment4/Assignment4.html#figure-1",
    "title": "Subreddit Wars",
    "section": "Figure 1:",
    "text": "Figure 1:\n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\n\nheatmap_data &lt;- reddit_data %&gt;%\n  count(SOURCE_SUBREDDIT, TARGET_SUBREDDIT, name = \"weight\") %&gt;%\n  top_n(10, wt = weight) %&gt;%\n  arrange(desc(weight))  # ordering from highest to lowest weight\n\n\n# heatmap\nggplot(heatmap_data, aes(x = SOURCE_SUBREDDIT, y = TARGET_SUBREDDIT, fill = weight)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkred\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Top 10 Subreddit Interactions\", \n       x = \"Source Subreddit\", \n       y = \"Target Subreddit\", \n       fill = \"Link Count\")\n\n\n\n\n\n\n\n\n\nI’m making a heatmap to show how subreddits are connected because it helps us easily see their relationships and spot patterns using colors and organization."
  },
  {
    "objectID": "posts/Assignment4/Assignment4.html#figure-2",
    "href": "posts/Assignment4/Assignment4.html#figure-2",
    "title": "Subreddit Wars",
    "section": "Figure 2:",
    "text": "Figure 2:\n\n\nCode\nbad_heatmap_data &lt;- reddit_data %&gt;%\n  count(SOURCE_SUBREDDIT, TARGET_SUBREDDIT, name = \"weight\") %&gt;%\n  top_n(10, wt = weight)  # no ordering\n\nggplot(bad_heatmap_data, aes(x = SOURCE_SUBREDDIT, y = TARGET_SUBREDDIT, fill = weight)) +\n  geom_tile(color = \"black\") +\n  scale_fill_gradient(low = \"white\", high = \"yellow\") +  \n  theme_light() +\n  theme(\n    axis.text.x = element_text(angle = 90, size = 8, hjust = 1),\n    axis.text.y = element_text(size = 8),\n    panel.grid.major = element_line(color = \"black\"),  \n    legend.position = \"none\"  \n  ) +\n  labs(\n    title = \"Bad Heatmap\", \n    x = \"Source Subreddit\", \n    y = \"Target Subreddit\", \n    fill = \"Link Count\"\n  )\n\n\n\n\n\n\n\n\n\nHere the color scheme white to yellow makes it hard to differentiate values, and the thick black gridlines adding clutter. There is no legend to explain the color scale, which makes interpretation hard."
  },
  {
    "objectID": "posts/Assignment4/Assignment4.html#figure-3",
    "href": "posts/Assignment4/Assignment4.html#figure-3",
    "title": "Subreddit Wars",
    "section": "Figure 3:",
    "text": "Figure 3:\n\n\nCode\nlibrary(ggridges)\n\n# top subreddits with the most links\ntop_subreddits &lt;- reddit_data %&gt;%\n  count(SOURCE_SUBREDDIT, sort = TRUE) %&gt;%\n  top_n(10, n) %&gt;%\n  pull(SOURCE_SUBREDDIT)\n\nreddit_filtered &lt;- reddit_data %&gt;%\n  filter(SOURCE_SUBREDDIT %in% top_subreddits)\n\n# timestamp to date\nreddit_filtered$DATE &lt;- as.Date(reddit_filtered$TIMESTAMP)\n\nggplot(reddit_filtered, aes(x = DATE, y = SOURCE_SUBREDDIT, height = ..density.., fill = SOURCE_SUBREDDIT)) +\n  geom_density_ridges(stat = \"density\", alpha = 0.8) +\n  theme_minimal() +\n  labs(title = \"Distribution of Post Frequency Over Time\",\n       x = \"Date\",\n       y = \"Subreddit\",\n       fill = \"Subreddit\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\nThis is a joy plot to show how post frequency are distributed over time for different subreddits. The subreddit’s posting trends are visually distinct and we have clear vertical separation with the temporal patterns easy to spot."
  },
  {
    "objectID": "posts/Assignment4/Assignment4.html#figure-4",
    "href": "posts/Assignment4/Assignment4.html#figure-4",
    "title": "Subreddit Wars",
    "section": "Figure 4:",
    "text": "Figure 4:\n\n\nCode\nlibrary(lubridate)\nreddit_data &lt;- reddit_data %&gt;%\n  mutate(TIMESTAMP = as_datetime(TIMESTAMP))\n\nggplot(reddit_data, aes(x = TIMESTAMP)) +\n  geom_histogram(binwidth = 1 * 24 * 60 * 60, fill = \"gray80\", color = \"gray80\", alpha = 0.5) +\n  theme_minimal(base_size = 8) +\n  labs(\n    title = \"Histogram of Subreddit Interactions Over Time\",\n    x = \"Time (Days)\",\n    y = \"Frequency of Interactions\"\n  ) +\n  scale_x_datetime(date_labels = \"%b %Y\", date_breaks = \"1 month\") +\n  theme(\n    axis.text.x = element_text(angle = 0, hjust = 1, size = 6),\n    axis.text.y = element_text(size = 6),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nThis is a histohram to visualize frequency of subreddit interactions over days (a bin for each day), with the x axis labels overlapping, and a poor color contrast. We also have no clear bar separation. I think I managed to make this figure fail at discriminability!"
  },
  {
    "objectID": "posts/Assignment4/Assignment4.html#figure-5",
    "href": "posts/Assignment4/Assignment4.html#figure-5",
    "title": "Subreddit Wars",
    "section": "Figure 5:",
    "text": "Figure 5:\n\n\nCode\n# popular subreddits (top 3 by frequency)\npopular_sources &lt;- reddit_data %&gt;%\n  count(SOURCE_SUBREDDIT, sort = TRUE) %&gt;%\n  slice(1:3) %&gt;%\n  pull(SOURCE_SUBREDDIT)\n\ndata_good &lt;- reddit_data %&gt;% \n  filter(SOURCE_SUBREDDIT %in% popular_sources)\n\n# Summarize the counts of +1 vs. -1 for each subreddit\ndata_good_summary &lt;- data_good %&gt;%\n  group_by(SOURCE_SUBREDDIT, LINK_SENTIMENT) %&gt;%\n  summarise(count = n(), .groups = \"drop\") %&gt;%\n  mutate(prop = count / sum(count))\n\nggplot(data_good_summary, aes(x = SOURCE_SUBREDDIT, \n                              y = prop, \n                              fill = factor(LINK_SENTIMENT))) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.8), color = \"black\") +\n  scale_fill_brewer(palette = \"Set2\", name = \"Link Sentiment\") +\n  theme_minimal(base_size = 14) +\n  labs(title = \"How Top Subreddits Link to Others—Positive vs. Negative Sentiment\",\n       x = \"Source Subreddit\",\n       y = \"Proportion of Links\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\nThe full dataset has tens of thousands of subreddits, but I just focusd here on the top three subreddits by frequency of hyperlinks This figure tracks how subreddits link to each other. Each link has a sentiment: +1 for positive or neutral, -1 for negative. The data spans 2.5 years revealing how subreddits reference, support, or criticize each other.\nThe positive bar is taller than its negative bar meaning that this community typically links out with positive/neutral sentiment towards other subreddits."
  },
  {
    "objectID": "posts/Assignment4/Assignment4.html#figure-6",
    "href": "posts/Assignment4/Assignment4.html#figure-6",
    "title": "Subreddit Wars",
    "section": "Figure 6:",
    "text": "Figure 6:\n\n\nCode\ndata_bad_summary &lt;- data_good_summary\n\nggplot(data_bad_summary, aes(x = SOURCE_SUBREDDIT, y = count, fill = factor(LINK_SENTIMENT))) +\n  geom_bar(stat = \"identity\", position = \"stack\", color = \"black\") +\n  scale_fill_manual(values = c(\"gray70\", \"gray80\"), name = \"Link Sentiment\") +\n  theme_minimal(base_size = 14) +\n  labs(\n    title = \"Total Number of Positive and Negative Links in Top Subreddits\",\n    x = \"Source Subreddit\",\n    y = \"Number of Links\"\n  ) +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\nStacked bar chart of negative vs. positive links for three subreddits, shown in nearly identical shades of gray. This makes it difficult to distinguish the two sentiment categories."
  },
  {
    "objectID": "posts/Assignment4/Assignment4.html#figure-7",
    "href": "posts/Assignment4/Assignment4.html#figure-7",
    "title": "Subreddit Wars",
    "section": "Figure 7:",
    "text": "Figure 7:\n\n\nCode\nsubreddit_data &lt;- data.frame(\n  Subreddit = c(\"gaming\", \"xboxone\", \"ps4\", \"fitness\", \"cancer\", \n                \"politics\", \"technology\", \"science\", \"movies\", \"music\"),\n  Hyperlinks = c(120, 85, 90, 60, 75, 110, 95, 80, 70, 65)\n)\n\nggplot(subreddit_data, aes(x = Subreddit, y = Hyperlinks, fill = Subreddit)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = ifelse(subreddit_data$Subreddit == \"ps4\", \"red\", \"gray\")) +\n  labs(title = \"Number of Hyperlinks Shared by Different Subreddits\", x = \"Subreddit\", y = \"Number of Hyperlinks\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nHere we have a bar chart showing the number of hyperlinks from different source subreddits, where gaming subreddit is popping out in red to draw attention to its high hyperlink count compared to others."
  },
  {
    "objectID": "posts/Assignment4/Assignment4.html#figure-8",
    "href": "posts/Assignment4/Assignment4.html#figure-8",
    "title": "Subreddit Wars",
    "section": "Figure 8:",
    "text": "Figure 8:\n\n\nCode\nggplot(subreddit_data, aes(x = Subreddit, y = Hyperlinks)) +\n  geom_bar(stat = \"identity\", fill = \"gray\") +\n  labs(title = \"Number of Hyperlinks Shared by Different Subreddits\", x = \"Subreddit\", y = \"Number of Hyperlinks\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nHere we have the same bar chart, but with all bars in the same color, causing them to blend together and making it hard to distinguish any popping elements I want to identify."
  },
  {
    "objectID": "posts/Assignment1/Assignment_1.html",
    "href": "posts/Assignment1/Assignment_1.html",
    "title": "Anscombe’s Quartet Visualization",
    "section": "",
    "text": "For this assignment, I’m doing a visualization with Anscombe’s Quartet—a very interesting dataset that shows how important it is to actually see our data, not just look at the stats. It is named after Frank Anscombe, t he one who designed the dataset in 1973 to teach this lesson.\nThe dataset consists of four groups of x and y values that share almost identical summary statistics (mean, variance, and correlation) but look so different when plotted. I’ll create two visualizations, one straightforward and coded by hand, and another with a little help from AI to make it more playful and polished."
  },
  {
    "objectID": "posts/Assignment1/Assignment_1.html#a-nicer-cuter-one",
    "href": "posts/Assignment1/Assignment_1.html#a-nicer-cuter-one",
    "title": "Anscombe’s Quartet Visualization",
    "section": "A nicer cuter one,",
    "text": "A nicer cuter one,\n\n\nCode\nggplot(anscombe_tidy, aes(x = x, y = y)) +\n  geom_point(aes(color = \"Data Points\"), size = 4, alpha = 0.8, shape = 21, fill = \"#80CBC4\") +\n  geom_smooth(aes(color = \"Trend Line\"), method = \"lm\", se = FALSE, size = 1.2, linetype = \"dashed\") +\n  facet_wrap(~set, ncol = 2) +\n  scale_color_manual(\n    values = c(\"Data Points\" = \"#4DB6AC\", \"Trend Line\" = \"#E57373\"),\n    name = NULL\n  ) +\n  labs(\n    title = \"Anscombe's Quartet\",\n    subtitle = \"Identical statistical summaries, visually distinct datasets. Like whaaat! :o\",\n    x = \"X Values\",\n    y = \"Y Values\",\n    caption = \"Data Source: Anscombe (1973)\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 18, hjust = 0.5, color = \"#37474F\"),\n    plot.subtitle = element_text(size = 14, hjust = 0.5, color = \"#546E7A\"),\n    strip.text = element_text(face = \"bold\", color = \"#FF7043\"),\n    axis.title = element_text(face = \"bold\", color = \"#37474F\"),\n    panel.grid.major = element_line(color = \"#CFD8DC\"),\n    panel.grid.minor = element_blank(),\n    plot.background = element_rect(fill = \"#F9FBE7\", color = NA),\n    legend.position = \"top\",\n    legend.justification = \"center\",\n    legend.box.spacing = unit(0.2, \"cm\")\n  )"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "I’m Marwa Elsayed, a Ph.D. student in Political Science at the University of Idaho, with a background in Public Administration and Tour Guidance. My research focuses on policy analysis, water governance, and data-driven decision-making. I’m interested in data visualization, political research methods, and using computational tools for public policy.\nOutside of academia, I love lifting, climbing, and electronic music."
  },
  {
    "objectID": "about.html#about-this-portfolio",
    "href": "about.html#about-this-portfolio",
    "title": "About Me",
    "section": "About this Portfolio",
    "text": "About this Portfolio\nThis is my BCB 520 Foundations of Data Visualization class portfolio where I track my assignments and progress."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BCB520 Portfolio",
    "section": "",
    "text": "Welcome to My BCB520 Portfolio!\nThis is my learning journey through BCB520! I’ll be posting my assignments and exploring data visualization along the way. By the end of the semester, I hope this turns into a cool portfolio showcasing my progress.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnscombe’s Quartet Visualization\n\n\nAssignment 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Visualization using Reddit Hyperlink Network\n\n\nAssignment 2 & 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSubreddit Wars\n\n\nAssignment 4: Marks and Channels\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHockey Analytics\n\n\nAssignment 5: NHL Player Award Ballots\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHockey Ballot Blender\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNetwork Practice\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Assignment2_3/Assignment_2.html",
    "href": "posts/Assignment2_3/Assignment_2.html",
    "title": "Data Visualization using Reddit Hyperlink Network",
    "section": "",
    "text": "For this assignment, I’m creating a data visualization using the Reddit Hyperlink Network dataset from Stanford’s SNAP (source). This dataset tracks how different subreddits are connected through hyperlinks—basically, when one subreddit links to another in a post.\nI picked the second dataset to analyze subreddit interactions based on title mentions rather than mentions in in posts for simplicity. I’m using Social Network Analysis (SNA) to explore how communities interact and connect on Reddit. The goal is to visualize these relationships and see patterns in how subreddits reference each other!\n\n\nCode\nlibrary(readr)\n\nfile_path &lt;- \"C:/Github repos/soc-redditHyperlinks-title.tsv\"\n\n# using read_tsv to read the data without needing to decompress it\nreddit_data &lt;- read_tsv(file_path, comment = \"#\")\n\nhead(reddit_data)\n\n\n# A tibble: 6 × 6\n  SOURCE_SUBREDDIT  TARGET_SUBREDDIT POST_ID TIMESTAMP           LINK_SENTIMENT\n  &lt;chr&gt;             &lt;chr&gt;            &lt;chr&gt;   &lt;dttm&gt;                       &lt;dbl&gt;\n1 rddtgaming        rddtrust         1u4pzzs 2013-12-31 16:39:18              1\n2 xboxone           battlefield_4    1u4tmfs 2013-12-31 17:59:11              1\n3 ps4               battlefield_4    1u4tmos 2013-12-31 17:59:40              1\n4 fitnesscirclejerk leangains        1u50xfs 2013-12-31 19:01:56              1\n5 fitnesscirclejerk lifeprotips      1u51nps 2013-12-31 21:02:28              1\n6 cancer            fuckcancer       1u5216s 2013-12-31 18:59:26              1\n# ℹ 1 more variable: PROPERTIES &lt;chr&gt;\n\n\nTo understand this, we’ll turn the data into a network (graph) where:\n- Each subreddit is a dot (node).\n- A line (edge) connects two dots if one subreddit links to another.\nTo see how different communities are connected and which ones are the most linked or influential.\n\nSOURCE_SUBREDDIT is where the link starts (the subreddit that posted the link).\n\nTARGET_SUBREDDIT is where the link goes (the subreddit being linked to).\n\n\n\nCode\nlibrary(igraph)\n\nedges &lt;- reddit_data[, c(\"SOURCE_SUBREDDIT\", \"TARGET_SUBREDDIT\")]\n\nreddit_graph &lt;- graph_from_data_frame(edges, directed = TRUE)\n\nsummary(reddit_graph)\n\n\nIGRAPH 9ce47d5 DN-- 54075 571927 -- \n+ attr: name (v/c)\n\n\nThis tells us: - The network consists of 54,075 subreddits. - There are 571,927 hyperlinks connecting them. - The graph is directed, meaning links have a source and a destination.\n\nFinding the most refrenced subreddits (in-degree centrality)\n\n\nCode\ntop_influential &lt;- sort(degree(reddit_graph, mode = \"in\"), decreasing = TRUE)[1:10]\ncat(\"Top 10 Most Linked Subreddits (In-Degree Centrality):\\n\")\n\n\nTop 10 Most Linked Subreddits (In-Degree Centrality):\n\n\nCode\nprint(top_influential)\n\n\n    askreddit          pics          iama todayilearned         funny \n        19293          9799          9752          8753          8731 \n    worldnews        videos          news      politics        gaming \n         7687          7567          5928          4860          4695 \n\n\n\n\nFinding the most active subreddits (out-degree centrailty)\n\n\nCode\ntop_outbound &lt;- sort(degree(reddit_graph, mode = \"out\"), decreasing = TRUE)[1:10]\ncat(\"Top 10 Subreddits That Link the Most (Out-Degree Centrality):\\n\")\n\n\nTop 10 Subreddits That Link the Most (Out-Degree Centrality):\n\n\nCode\nprint(top_outbound)\n\n\n  subredditdrama           bestof        titlegore   shitredditsays \n           22971            21170             9500             7338 \n        shitpost     circlebroke2       switcharoo shitamericanssay \n            6657             6037             5997             5482 \n           drama  shitstatistssay \n            5478             4240 \n\n\n\n\nCreating a network of the most refrenced subreddits\n\n\nCode\n# Get the top 50 most linked subreddits by in-degree\ntop_50 &lt;- names(sort(degree(reddit_graph, mode = \"in\"), decreasing = TRUE))[1:50]\n\n# Create a subgraph with only those subreddits\nsubreddit_subgraph &lt;- induced_subgraph(reddit_graph, vids = top_50)\n\n# Convert to tidygraph for visualization\nlibrary(ggraph)\nlibrary(tidygraph)\n\nset.seed(42)\nggraph(as_tbl_graph(subreddit_subgraph), layout = \"kk\") + \n  geom_edge_link(aes(alpha = 0.5), color = \"gray\") +\n  geom_node_point(size = 5, aes(color = degree(subreddit_subgraph, mode = \"in\"))) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 4) +\n  theme_void() +\n  ggtitle(\"Top 50 Most Linked Subreddits\")"
  },
  {
    "objectID": "posts/Assignment5/HockeyAnalytics.html",
    "href": "posts/Assignment5/HockeyAnalytics.html",
    "title": "Hockey Analytics",
    "section": "",
    "text": "In this assignment, I will create data driven ballots for 6 NHL awards, ranking five players per category. These awards such as the Hart Memorial Trophy for MVP, the Vezina Trophy for top goaltender, and the Calder Memorial Trophy for best rookie are determined by subjective voting, but my approach will rely on relevant performance metrics.\n\nReading the data and basic joins and filtering\n\n\nCode\nlibrary(tidyverse)\nlibrary(kableExtra)\nlibrary(pillar)\n\n\nbase_url &lt;- \"https://raw.githubusercontent.com/ProfessorPolymorphic/BCB520/main/posts/A5-TabularData/\"\n\nrookie_goalies      &lt;- read_csv(paste0(base_url, \"RookieGoalies.csv\"))\nrookie_skaters_ind  &lt;- read_csv(paste0(base_url, \"RookieSkaterIndividual.csv\"))\nrookie_skaters_onice&lt;- read_csv(paste0(base_url, \"RookieSkaterOnIce.csv\"))\nskaters_ind         &lt;- read_csv(paste0(base_url, \"SkaterIndividualstats.csv\"))\nskaters_onice       &lt;- read_csv(paste0(base_url, \"SkaterOnIcestats.csv\"))\n\n\n\n\nCode\nall_skaters &lt;- skaters_onice %&gt;%\n  inner_join(skaters_ind, by = c(\"Player\", \"Team\", \"Position\", \"GP\"))\n\nrookie_skaters &lt;- rookie_skaters_onice %&gt;%\n  inner_join(rookie_skaters_ind, by = c(\"Player\", \"Team\", \"Position\", \"GP\"))\n\n\n\n\nHart Memorial Trophy\nThis is for player most valuable to the team. The criteria I will use is total points per game in at least 30 games played.\n\n\nCode\nmvp_candidates &lt;- all_skaters %&gt;%\n  filter(GP &gt;= 30) %&gt;%\n  mutate(PPG = `Total Points` / GP) %&gt;%\n  arrange(desc(PPG)) %&gt;%\n  select(Player, Team, Position, GP, `Total Points`, PPG)\n\n#ballot\nmvp_top5 &lt;- head(mvp_candidates, 5)\n\n\n\n\nVezina Trophy\nThis is for the top goaltender. I will use saves and goals against as metrics.\n\n\nCode\nvezina_candidates &lt;- rookie_goalies %&gt;%\n  filter(GP &gt;= 30) %&gt;%\n  mutate(SavePercentage = Saves / (Saves + `Goals Against`)) %&gt;%\n  arrange(desc(SavePercentage)) %&gt;% \n  select(Player, Team, GP, Saves, `Goals Against`, SavePercentage)\n\n#ballot\nvezina_top5 &lt;- head(vezina_candidates, 5)\n\n\n\n\nCalder Memorial Trophy\nThis is for rookie of the year, the most proficient player in his first year of competition.\n\n\nCode\ncalder_candidates &lt;- rookie_skaters %&gt;%\n  filter(GP &gt;= 30) %&gt;%\n  mutate(PPG = `Total Points` / GP) %&gt;%\n  arrange(desc(PPG)) %&gt;%\n  select(Player, Team, Position, GP, `Total Points`, PPG)\n\n#ballot\ncalder_top5 &lt;- head(calder_candidates, 5)\n\n\n\n\nJames Norris Memorial Trophy\nThis is awarded to the defenseman with the greatest all around ability. I will filter by Position == “D” and use a hypothetical Impact metric, which will be the total of points and assists relative to time on ice.\n\n\nCode\nnorris_candidates &lt;- all_skaters %&gt;%\n  filter(Position == \"D\", GP &gt;= 30) %&gt;%\n  mutate(Impact = (`Total Points` + `Total Assists`) / TOI.x) %&gt;% \n  arrange(desc(Impact)) %&gt;%\n  select(Player, Team, GP, `Total Points`, `Total Assists`, Impact)\n\n#ballot\nnorris_top5 &lt;- head(norris_candidates, 5)\n\n\n\n\nFrank J. Selke Trophy\nThis is for the forwards player who best excels in the defensive aspects of the game. I will be using on ice shot for percentage.\n\n\nCode\nselke_candidates &lt;- all_skaters %&gt;%\n  filter(Position %in% c(\"C\", \"R\"), GP &gt;= 30) %&gt;%\n  mutate(DefensiveRating = `SF%`) %&gt;%\n  arrange(desc(DefensiveRating)) %&gt;%\n  select(Player, Team, GP, `Total Points`, `SF%`, DefensiveRating)\n\nselke_top5 &lt;- head(selke_candidates, 5)\n\n\n\n\nLady Byng Memorial Trophy\nThis is for the player who has best sportsmanship while also having a high standard of playing. I will use low penalty minutes (PIM) as a proxy for that.\n\n\nCode\nlady_byng_candidates &lt;- all_skaters %&gt;%\n  filter(GP &gt;= 30) %&gt;% \n  mutate(Sportsmanship = ifelse(PIM == 0, 1, 1 / PIM)) %&gt;%\n  arrange(desc(Sportsmanship)) %&gt;%\n  select(Player, Team, GP, PIM, Sportsmanship)\n\n#ballot\nlady_byng_top5 &lt;- head(lady_byng_candidates, 5)\n\n\n\n\nShowing each ballot seprately\n\n\nCode\n## Hart Memorial Trophy\nmvp_top5\n\n\n# A tibble: 5 × 6\n  Player           Team  Position    GP `Total Points`   PPG\n  &lt;chr&gt;            &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;\n1 Nikita Kucherov  T.B   R           57             87  1.53\n2 Leon Draisaitl   EDM   C           60             90  1.5 \n3 Nathan MacKinnon COL   C           61             91  1.49\n4 Kirill Kaprizov  MIN   L           37             52  1.41\n5 Connor McDavid   EDM   C           54             75  1.39\n\n\nCode\n## Vezina Trophy\nvezina_top5\n\n\n# A tibble: 5 × 6\n  Player          Team     GP Saves `Goals Against` SavePercentage\n  &lt;chr&gt;           &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n1 Logan Thompson  WSH      35   904              81          0.918\n2 Dustin Wolf     CGY      36   980              93          0.913\n3 Lukas Dostal    ANA      36  1011             100          0.910\n4 Joseph Woll     TOR      32   833              85          0.907\n5 Pyotr Kochetkov CAR      37   835              91          0.902\n\n\nCode\n## Calder Memorial Trophy\ncalder_top5\n\n\n# A tibble: 5 × 6\n  Player           Team  Position    GP `Total Points`   PPG\n  &lt;chr&gt;            &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;\n1 Kirill Marchenko CBJ   R           57             60 1.05 \n2 Wyatt Johnston   DAL   C           60             55 0.917\n3 Kent Johnson     CBJ   C           46             42 0.913\n4 Logan Cooley     UTA   C           54             47 0.870\n5 Marco Rossi      MIN   C           61             51 0.836\n\n\nCode\n## James Norris Memorial Trophy\nnorris_top5\n\n\n# A tibble: 5 × 6\n  Player        Team     GP `Total Points` `Total Assists` Impact\n  &lt;chr&gt;         &lt;chr&gt; &lt;dbl&gt;          &lt;dbl&gt;           &lt;dbl&gt;  &lt;dbl&gt;\n1 Quinn Hughes  VAN      50             60              46 0.0844\n2 Shea Theodore VGK      55             48              41 0.0734\n3 Cale Makar    COL      61             67              45 0.0711\n4 Zach Werenski CBJ      59             64              46 0.0693\n5 Rasmus Dahlin BUF      51             48              38 0.0692\n\n\nCode\n## Frank J. Selke Trophy\nselke_top5\n\n\n# A tibble: 5 × 6\n  Player           Team     GP `Total Points` `SF%` DefensiveRating\n  &lt;chr&gt;            &lt;chr&gt; &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;           &lt;dbl&gt;\n1 Jackson Blake    CAR      61             22  66.8            66.8\n2 Tomas Hertl      VGK      60             46  64.5            64.5\n3 Nathan MacKinnon COL      61             91  64.1            64.1\n4 Leon Draisaitl   EDM      60             90  64.0            64.0\n5 Connor McDavid   EDM      54             75  63.3            63.3\n\n\nCode\n## Lady Byng Memorial Trophy\nlady_byng_top5\n\n\n# A tibble: 5 × 5\n  Player           Team     GP   PIM Sportsmanship\n  &lt;chr&gt;            &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n1 William Karlsson VGK      38     0           1  \n2 Jimmy Vesey      NYR      33     0           1  \n3 Cole Schwindt    VGK      38     0           1  \n4 Brayden Point    T.B      55     2           0.5\n5 Anze Kopitar     L.A      59     2           0.5\n\n\n\n\nThe ballots in a single table\n\n\nCode\nballots_combined &lt;- bind_rows(\n  mvp_top5 %&gt;% mutate(Award = \"Hart Memorial Trophy\", Rank = row_number()),\n  vezina_top5 %&gt;% mutate(Award = \"Vezina Trophy\", Rank = row_number()),\n  calder_top5 %&gt;% mutate(Award = \"Calder Memorial Trophy\", Rank = row_number()),\n  norris_top5 %&gt;% mutate(Award = \"James Norris Memorial Trophy\", Rank = row_number()),\n  selke_top5 %&gt;% mutate(Award = \"Frank J. Selke Trophy\", Rank = row_number()),\n  lady_byng_top5 %&gt;% mutate(Award = \"Lady Byng Memorial Trophy\", Rank = row_number())\n) %&gt;%\n  mutate(Voter = \"Marwa\") %&gt;%\n  select(Voter, Rank, Award, Player)\n\n# Display the full table\nballots_combined %&gt;% \n  kable(\"html\") %&gt;% \n  kable_styling(full_width = TRUE, bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))\n\n\n\n\n\nVoter\nRank\nAward\nPlayer\n\n\n\n\nMarwa\n1\nHart Memorial Trophy\nNikita Kucherov\n\n\nMarwa\n2\nHart Memorial Trophy\nLeon Draisaitl\n\n\nMarwa\n3\nHart Memorial Trophy\nNathan MacKinnon\n\n\nMarwa\n4\nHart Memorial Trophy\nKirill Kaprizov\n\n\nMarwa\n5\nHart Memorial Trophy\nConnor McDavid\n\n\nMarwa\n1\nVezina Trophy\nLogan Thompson\n\n\nMarwa\n2\nVezina Trophy\nDustin Wolf\n\n\nMarwa\n3\nVezina Trophy\nLukas Dostal\n\n\nMarwa\n4\nVezina Trophy\nJoseph Woll\n\n\nMarwa\n5\nVezina Trophy\nPyotr Kochetkov\n\n\nMarwa\n1\nCalder Memorial Trophy\nKirill Marchenko\n\n\nMarwa\n2\nCalder Memorial Trophy\nWyatt Johnston\n\n\nMarwa\n3\nCalder Memorial Trophy\nKent Johnson\n\n\nMarwa\n4\nCalder Memorial Trophy\nLogan Cooley\n\n\nMarwa\n5\nCalder Memorial Trophy\nMarco Rossi\n\n\nMarwa\n1\nJames Norris Memorial Trophy\nQuinn Hughes\n\n\nMarwa\n2\nJames Norris Memorial Trophy\nShea Theodore\n\n\nMarwa\n3\nJames Norris Memorial Trophy\nCale Makar\n\n\nMarwa\n4\nJames Norris Memorial Trophy\nZach Werenski\n\n\nMarwa\n5\nJames Norris Memorial Trophy\nRasmus Dahlin\n\n\nMarwa\n1\nFrank J. Selke Trophy\nJackson Blake\n\n\nMarwa\n2\nFrank J. Selke Trophy\nTomas Hertl\n\n\nMarwa\n3\nFrank J. Selke Trophy\nNathan MacKinnon\n\n\nMarwa\n4\nFrank J. Selke Trophy\nLeon Draisaitl\n\n\nMarwa\n5\nFrank J. Selke Trophy\nConnor McDavid\n\n\nMarwa\n1\nLady Byng Memorial Trophy\nWilliam Karlsson\n\n\nMarwa\n2\nLady Byng Memorial Trophy\nJimmy Vesey\n\n\nMarwa\n3\nLady Byng Memorial Trophy\nCole Schwindt\n\n\nMarwa\n4\nLady Byng Memorial Trophy\nBrayden Point\n\n\nMarwa\n5\nLady Byng Memorial Trophy\nAnze Kopitar"
  },
  {
    "objectID": "posts/Networks Practice/Network Practice.html",
    "href": "posts/Networks Practice/Network Practice.html",
    "title": "Network Practice",
    "section": "",
    "text": "Code\nlibrary(readxl)\nlibrary(tidygraph)\nlibrary(ggraph)\nlibrary(igraph)\nlibrary(dplyr)\nCode\nfile_path &lt;- \"Networksfixed.xlsx\"\n\npeople &lt;- read_excel(file_path, sheet = \"People\")\nrelations &lt;- read_excel(file_path, sheet = \"Relations\")\norg_chart &lt;- read_excel(file_path, sheet = \"Sheet1\")\nCode\nlibrary(readxl)\nlibrary(tidygraph)\nlibrary(ggraph)\nlibrary(igraph)\nlibrary(dplyr)\n\n# Load data\npeople &lt;- read_excel(\"Networksfixed.xlsx\", sheet = \"People\")\nrelations &lt;- read_excel(\"Networksfixed.xlsx\", sheet = \"Relations\")\n\n# Create network\ngraph &lt;- tbl_graph(nodes = people, edges = relations, directed = TRUE)\n\n# Plot network\nggraph(graph, layout = \"fr\") +\n  geom_edge_link(aes(color = Advisor), alpha = 0.8) +\n  geom_node_point(aes(color = department), size = 4) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 3) +\n  theme_void() +\n  labs(title = \"Network of People & Advisor Relationships\",\n       subtitle = \"Edge color = Advisor, Node color = Department\")"
  },
  {
    "objectID": "posts/Networks Practice/Network Practice.html#layout-comparison-gallery",
    "href": "posts/Networks Practice/Network Practice.html#layout-comparison-gallery",
    "title": "Network Practice",
    "section": "📊 Layout Comparison Gallery",
    "text": "📊 Layout Comparison Gallery\nBelow are the five layouts rendered with different algorithms. Use the scrollbar to explore."
  },
  {
    "objectID": "posts/Networks Practice/Network Practice.html#network-layout-carousel",
    "href": "posts/Networks Practice/Network Practice.html#network-layout-carousel",
    "title": "Network Practice",
    "section": "📸 Network Layout Carousel",
    "text": "📸 Network Layout Carousel\nBelow are the network layout variations. Use the arrows or dots to scroll through.\n\n\n&lt;div class=\"swiper-slide\"&gt;&lt;img src=\"plots/network_fr.png\" style=\"width: 100%; border-radius: 10px;\"&gt;&lt;/div&gt;\n&lt;div class=\"swiper-slide\"&gt;&lt;img src=\"plots/network_kk.png\" style=\"width: 100%; border-radius: 10px;\"&gt;&lt;/div&gt;\n&lt;div class=\"swiper-slide\"&gt;&lt;img src=\"plots/network_graphopt.png\" style=\"width: 100%; border-radius: 10px;\"&gt;&lt;/div&gt;\n&lt;div class=\"swiper-slide\"&gt;&lt;img src=\"plots/network_stress.png\" style=\"width: 100%; border-radius: 10px;\"&gt;&lt;/div&gt;\n&lt;div class=\"swiper-slide\"&gt;&lt;img src=\"plots/network_drl.png\" style=\"width: 100%; border-radius: 10px;\"&gt;&lt;/div&gt;"
  },
  {
    "objectID": "posts/Networks Practice/Network Practice.html#below-are-the-network-layout-variations.-use-the-arrows-or-dots-to-scroll-through.",
    "href": "posts/Networks Practice/Network Practice.html#below-are-the-network-layout-variations.-use-the-arrows-or-dots-to-scroll-through.",
    "title": "Network Practice",
    "section": "Below are the network layout variations. Use the arrows or dots to scroll through.",
    "text": "Below are the network layout variations. Use the arrows or dots to scroll through.\n\n\n&lt;div class=\"swiper-slide\"&gt;&lt;img src=\"plots/network_fr.png\" style=\"width: 100%; border-radius: 10px;\"&gt;&lt;/div&gt;\n&lt;div class=\"swiper-slide\"&gt;&lt;img src=\"plots/network_kk.png\" style=\"width: 100%; border-radius: 10px;\"&gt;&lt;/div&gt;\n&lt;div class=\"swiper-slide\"&gt;&lt;img src=\"plots/network_graphopt.png\" style=\"width: 100%; border-radius: 10px;\"&gt;&lt;/div&gt;\n&lt;div class=\"swiper-slide\"&gt;&lt;img src=\"plots/network_stress.png\" style=\"width: 100%; border-radius: 10px;\"&gt;&lt;/div&gt;\n&lt;div class=\"swiper-slide\"&gt;&lt;img src=\"plots/network_drl.png\" style=\"width: 100%; border-radius: 10px;\"&gt;&lt;/div&gt;"
  }
]